/*!
 * Copyright 2019 Hitachi Vantara. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The `IView` interface describes the contract of a visualization view.
 *
 * The view interface comprises a constructor which receives a single, required argument
 * of type [spec.IView]{@link pentaho.visual.spec.IView}.
 * Unfortunately, the documentation system used by this reference documentation
 * cannot express that.
 * Basically, the options argument contains two required properties,
 * [model]{@link pentaho.visual.spec.IView#model} and [domContainer]@link pentaho.visual.spec.IView#domContainer}.
 *
 * A view must listen to its model's [Update:{do}]{@link pentaho.visual.action.Update} phase event
 * and react by updating its rendering of the visualization.
 *
 * Note also that the view interface extends from the
 * [IDisposable]{@link pentaho.lang.IDisposable} interface,
 * so that views can free held _resources_ and not cause memory-leaks.
 *
 * @name IView
 * @memberOf pentaho.visual
 * @interface
 * @extends pentaho.lang.IDisposable
 */
