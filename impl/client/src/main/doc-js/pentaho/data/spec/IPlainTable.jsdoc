/*!
 * Copyright 2010 - 2017 Hitachi Vantara. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @classdesc The `spec.IPlainTable` interface
 * describes the structure of a specification
 * of a table with a plain structure.
 *
 * A table with a **plain** structure
 * is a table in which its structure (or layout) is perfectly aligned with its model, i.e.,
 * each row represents a single and distinct model entity and,
 * each column, a single model attribute.
 *
 * @name pentaho.data.spec.IPlainTable
 * @interface
 *
 * @property {number} version The version of the table specification format.
 *
 * Currently, the only possible value is `3`.
 *
 * When unspecified, the latest version is assumed,
 * whatever it is at the time.
 *
 * @property {pentaho.data.spec.IModel} model The model specification.
 *
 * Can be empty or not be specified at all.
 *
 * @property {Array.<pentaho.data.spec.PlainColumn>} cols An array of plain column specifications.
 *
 * When unspecified,
 * columns are built to match the attributes of the model,
 * one column per model attribute, in the same order.
 *
 * You only need to specify columns if:
 * * the columns order is different from the model attributes order
 * * not all attributes of the model are exposed as columns
 *
 * To specify a table with no columns (initially, that is), specify an empty array.
 *
 * @property {Array.<pentaho.data.spec.Row>} rows An array of row specifications.
 *
 * Can be empty or not be specified at all.
 *
 * @example <caption>A plain table specification with default columns</caption>
 *
 *     var plainTableSpec = {
 *       model: {
 *         attrs: [
 *           {
 *             name: "product",
 *             label: "Product",
 *             type: "string",
 *             members: [
 *               {v: "car",   f: "Car", },
 *               {v: "plane", f: "Plane"}
 *             ]
 *           },
 *           {
 *             name: "price",
 *             label: "Price",
 *             type: "number"
 *           }
 *         ],
 *
 *         p: {
 *           "foo": 1,
 *           "bar": 2
 *         }
 *       },
 *       rows: [
 *           {c: ["car",    1000]},
 *           {c: ["plain", 50000]}
 *       ]
 *     };
 */
